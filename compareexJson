# Function to get a list of scalar properties for sorting
function Get-ScalarProperties {
    param (
        [Parameter(Mandatory=$true)]
        [pscustomobject]$object
    )

    $scalarProperties = @()
    foreach ($property in $object.PSObject.Properties) {
        if ($property.Value -is [string] -or $property.Value -is [int] -or $property.Value -is [float] -or $property.Value -is [bool]) {
            $scalarProperties += $property.Name
        }
    }

    return $scalarProperties
}

# Updated function to compare two datasets (array of objects)
function Compare-JsonData {
    param (
        [Parameter(Mandatory=$true)]
        [array]$data1,
        
        [Parameter(Mandatory=$true)]
        [array]$data2
    )

    $differences = @()

    # Get scalar properties from the first object of each dataset (assuming structure consistency)
    $commonProperties = Get-ScalarProperties -object $data1[0]

    # Sort both datasets by available scalar properties
    $sortedData1 = $data1 | Sort-Object -Property $commonProperties
    $sortedData2 = $data2 | Sort-Object -Property $commonProperties

    # Compare object count
    if ($sortedData1.Count -ne $sortedData2.Count) {
        $differences += "The number of objects differs: sample1=$($sortedData1.Count) sample2=$($sortedData2.Count)"
    }

    # Compare each object
    for ($i = 0; $i -lt $sortedData1.Count; $i++) {
        $object1 = $sortedData1[$i]
        $object2 = $sortedData2[$i]

        $diff = Compare-JsonObjects -object1 $object1 -object2 $object2
        if ($diff.Count -gt 0) {
            $differences += "Differences in object at index $i:"
            $differences += $diff
        }
    }

    return $differences
}
