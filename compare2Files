
# Paths to the files you want to compare
$file1Path = "C:\path\to\file1.txt"
$file2Path = "C:\path\to\file2.txt"

# Load the file contents
$file1Content = Get-Content -Raw -Path $file1Path
$file2Content = Get-Content -Raw -Path $file2Path

# Function to split content into words and symbols, while removing specified symbols
function Split-Text {
    param (
        [Parameter(Mandatory=$true)] [string]$content
    )
    
    # Remove specific symbols (e.g., ["{}], commas, quotes)
    $content = $content -replace '[\[\]{}",]', ''

    # Split the content by whitespace (space, tab, newline)
    return $content -split '\s+' | Where-Object { $_ -ne '' }  # Filters out empty strings
}

# Split the content of both files into words
$file1Tokens = Split-Text -content $file1Content
$file2Tokens = Split-Text -content $file2Content

# Remove empty strings that may result from the split
$file1Tokens = $file1Tokens | Where-Object { $_ -ne '' }
$file2Tokens = $file2Tokens | Where-Object { $_ -ne '' }

# Compare both files, ignoring the order of the tokens
$onlyInFile1 = $file1Tokens | Where-Object { $_ -notin $file2Tokens }
$onlyInFile2 = $file2Tokens | Where-Object { $_ -notin $file1Tokens }

# Output the differences
Write-Output "Words only in file 1:"
$onlyInFile1 | ForEach-Object { Write-Output $_ }

Write-Output "`nWords only in file 2:"
$onlyInFile2 | ForEach-Object { Write-Output $_ }

PS C:\Users\SGK352\Downloads\JsonTest> .\CompareJson.ps1
At C:\Users\SGK352\Downloads\JsonTest\CompareJson.ps1:39 char:52
+ $onlyInFile2 | ForEach-Object { Write-Output $_ }_ }
+                                                    ~
Unexpected token '}' in expression or statement.
    + CategoryInfo          : ParserError: (:) [], ParseException
    + FullyQualifiedErrorId : UnexpectedToken

