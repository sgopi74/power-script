# Paths to the files you want to compare
$file1Path = "C:\path\to\file1.txt"
$file2Path = "C:\path\to\file2.txt"

# Load the file contents
$file1Content = Get-Content -Raw -Path $file1Path
$file2Content = Get-Content -Raw -Path $file2Path

# Function to split content into words and symbols, while removing specified symbols
function Split-Text {
    param (
        [Parameter(Mandatory=$true)] [string]$content
    )
    
    # Remove specific symbols (e.g., ["{}], commas, quotes)
    $content = $content -replace '[\[\]{}",]', ''

    # Split the content by whitespace (space, tab, newline)
    return $content -split '\s+' | Where-Object { $_ -ne '' }  # Filters out empty strings
}

# Function to count occurrences of words
function Count-Words {
    param (
        [Parameter(Mandatory=$true)] [array]$tokens
    )

    $wordCounts = @{}
    foreach ($word in $tokens) {
        if ($wordCounts.ContainsKey($word)) {
            $wordCounts[$word] += 1
        } else {
            $wordCounts[$word] = 1
        }
    }
    return $wordCounts
}

# Split the content of both files into words
$file1Tokens = Split-Text -content $file1Content
$file2Tokens = Split-Text -content $file2Content

# Count word occurrences in both files
$file1WordCounts = Count-Words -tokens $file1Tokens
$file2WordCounts = Count-Words -tokens $file2Tokens

# Compare both files, showing words that are only in one of the files
$onlyInFile1 = $file1WordCounts.Keys | Where-Object { $_ -notin $file2WordCounts.Keys }
$onlyInFile2 = $file2WordCounts.Keys | Where-Object { $_ -notin $file1WordCounts.Keys }

# Output the differences and word counts for file 1
Write-Output "Words only in file 1:"
foreach ($word in $onlyInFile1) {
    Write-Output "$word -> $($file1WordCounts[$word]) times"
}

# Output the differences and word counts for file 2
Write-Output "`nWords only in file 2:"
foreach ($word in $onlyInFile2) {
    Write-Output "$word -> $($file2WordCounts[$word]) times"
}

# Compare common words with different counts in both files
$commonWords = $file1WordCounts.Keys | Where-Object { $_ -in $file2WordCounts.Keys }
Write-Output "`nCommon words with different counts:"
foreach ($word in $commonWords) {
    if ($file1WordCounts[$word] -ne $file2WordCounts[$word]) {
        Write-Output "$word -> $($file1WordCounts[$word]) times (file 1), $($file2WordCounts[$word]) times (file 2)"
    }
}
